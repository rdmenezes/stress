<h1>Self Orginizing Map prediction</h1>

<% 
	classes = Array.new
	@normalized_data.each_index do |i| 
		id = @som.classify(@normalized_data[i]).first
		classes[id] = Array.new if classes[id] == nil
		classes[id] << @data_indexes[i]
	end
%>

<% classes.each_index do |id| %>
Classe <%= id %>: <%= classes[id].inspect %>
<% end %>
<br/>
<% 
	classes.sort!{|x,y| x.size <=>y.size } 
	classes.delete_at(-1) # delete more populate class
%>
<br/>

<% 
	similiar = classes.select{|x| x.include?(0)} 
	unless similiar.empty? %>
Communication with anomaly and looks like correct one:

<% similiar.each do|t| 
	t.each do |c|
%>
<%= link_to_remote c.to_s,
							{:url => { :controller => :output_analyzer, :action => :get_testcase_list, :output => @simulation_selected, :testcase_id => c}, 
							:before => "loading('testcase_menu')",
							:update => "testcase_menu"} %> 
<% 		end
	end 
	classes.delete_if{|x| x.include?(0)} 
end %>

<br/>
<%
unless classes.empty?  %>

Communication with anomaly with strange value:

<% classes.each do |t| 
	t.each do |c| %>
	
<%= link_to_remote c.to_s,
							{:url => { :controller => :output_analyzer, :action => :get_testcase_list, :output => @simulation_selected, :testcase_id => c}, 
							:before => "loading('testcase_menu')",
							:update => "testcase_menu"} %> 

<% 		end
	end 
end
%>
<br/>
